%% Copyright 2012 Cloudant
-module(wkb_test).

-include_lib("eunit/include/eunit.hrl").

geom_2d_test() ->
	% POINT
	Pt = "{\"type\":\"Point\", \"coordinates\": [100.0, 0.0]}",
	{ok, WKB1} = wkb_writer:geojson_to_wkb(Pt),
	?assertEqual("000000000140590000000000000000000000000000", 
		bin_to_hexstr(WKB1)),

	% LINESTRING
	L = "{\"type\": \"LineString\", \"coordinates\": [[100.0, 0.0],
			[101.0, 1.0]]}",
	{ok, WKB2} = wkb_writer:geojson_to_wkb(L),
	?assertEqual("0000000002000000024059000000000000000000000000000040594000000000003FF0000000000000",
		bin_to_hexstr(WKB2)),

	% POLYGON - No holes
	P1 = "{\"type\":\"Polygon\", \"coordinates\": [ [ [100.0, 0.0], 
			[101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ] ]}",
	{ok, WKB3} = wkb_writer:geojson_to_wkb(P1),
	?assertEqual("00000000030000000100000005405900000000000000000000000000004059400000000000000000000000000040594000000000003FF000000000000040590000000000003FF000000000000040590000000000000000000000000000",
		bin_to_hexstr(WKB3)),

	% POLYGON - holes
	P2 = "{\"type\":\"Polygon\",\"coordinates\": [ [ [100.0, 0.0], 
			[101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ],
			 [ [100.2, 0.2], [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], 
			 [100.2, 0.2] ] ] }",
	{ok, WKB4} = wkb_writer:geojson_to_wkb(P2),
	?assertEqual("00000000030000000200000005405900000000000000000000000000004059400000000000000000000000000040594000000000003FF000000000000040590000000000003FF0000000000000405900000000000000000000000000000000000540590CCCCCCCCCCD3FC999999999999A40593333333333333FC999999999999A40593333333333333FE999999999999A40590CCCCCCCCCCD3FE999999999999A40590CCCCCCCCCCD3FC999999999999A",
		bin_to_hexstr(WKB4)),

	% MULTIPOINT
	MP = "{\"type\":\"MultiPoint\",\"coordinates\":
			 [ [100.0, 0.0], [101.0, 1.0] ] }",
	{ok, WKB5} = wkb_writer:geojson_to_wkb(MP),
	?assertEqual("000000000400000002000000000140590000000000000000000000000000000000000140594000000000003FF0000000000000",
		bin_to_hexstr(WKB5)),

	% MULTILINESTRING
	MLS = "{\"type\":\"MultiLineString\",\"coordinates\": [ [ [100.0, 0.0],
			 [101.0, 1.0] ], [ [102.0, 2.0], [103.0, 3.0] ] ] }",
	{ok, WKB6} = wkb_writer:geojson_to_wkb(MLS),
	?assertEqual("0000000005000000020000000002000000024059000000000000000000000000000040594000000000003FF0000000000000000000000200000002405980000000000040000000000000004059C000000000004008000000000000",
		bin_to_hexstr(WKB6)),

	 % MULTIPOLYGON
	MP1 = "{\"type\": \"MultiPolygon\",\"coordinates\": [
		[[[102.0, 2.0], [103.0, 2.0], [103.0, 3.0], 
		[102.0, 3.0], [102.0, 2.0]]],
		[[[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], 
		[100.0, 1.0], [100.0, 0.0]],
		[[100.2, 0.2], [100.8, 0.2], [100.8, 0.8],
		 [100.2, 0.8], [100.2, 0.2]]]]}",
	{ok, WKB7} = wkb_writer:geojson_to_wkb(MP1),
	?assertEqual
		bin_to_hexstr(WKB7)),

	% GEOMETRYCOLLECTION
	GC = "{\"type\": \"GeometryCollection\", \"geometries\": 
			[ { \"type\": \"Point\",
			\"coordinates\": [100.0, 0.0]
		},
		{\"type\": \"LineString\",
			\"coordinates\": [ [101.0, 0.0], [102.0, 1.0] ] } ]}",
	{ok, WKB8} = wkb_writer:geojson_to_wkb(GC),
	?assertEqual("0000000007000000020000000001405900000000000000000000000000000000000002000000024059400000000000000000000000000040598000000000003FF0000000000000", 
		bin_to_hexstr(WKB8)),

	% real test
	UK = "{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-5.661949,54.554603],[-6.197885,53.867565],[-6.95373,54.073702],[-7.572168,54.059956],[-7.366031,54.595841],[-7.572168,55.131622],[-6.733847,55.17286],[-5.661949,54.554603]]],[[[-3.005005,58.635],[-4.073828,57.553025],[-3.055002,57.690019],[-1.959281,57.6848],[-2.219988,56.870017],[-3.119003,55.973793],[-2.085009,55.909998],[-2.005676,55.804903],[-1.114991,54.624986],[-0.430485,54.464376],[0.184981,53.325014],[0.469977,52.929999],[1.681531,52.73952],[1.559988,52.099998],[1.050562,51.806761],[1.449865,51.289428],[0.550334,50.765739],[-0.787517,50.774989],[-2.489998,50.500019],[-2.956274,50.69688],[-3.617448,50.228356],[-4.542508,50.341837],[-5.245023,49.96],[-5.776567,50.159678],[-4.30999,51.210001],[-3.414851,51.426009],[-3.422719,51.426848],[-4.984367,51.593466],[-5.267296,51.9914],[-4.222347,52.301356],[-4.770013,52.840005],[-4.579999,53.495004],[-3.093831,53.404547],[-3.09208,53.404441],[-2.945009,53.985],[-3.614701,54.600937],[-3.630005,54.615013],[-4.844169,54.790971],[-5.082527,55.061601],[-4.719112,55.508473],[-5.047981,55.783986],[-5.586398,55.311146],[-5.644999,56.275015],[-6.149981,56.78501],[-5.786825,57.818848],[-5.009999,58.630013],[-4.211495,58.550845],[-3.005005,58.635]]]]}",
	{ok, WKB9} = wkb_writer:geojson_to_wkb(UK),
	?assertEqual("00000000060000000200000000030000000100000008C016A5D5F56A7AC8404B46FD3B29A1BAC018CAA25D8D79D1404AEF0C5EB313BEC01BD09E98DCDB38404B096F112FD32CC01E49E6687F455A404B07ACA3619978C01D76D0D49949E9404B4C4484944ED7C01E49E6687F455A404B90D8FD5CB791C01AEF7596851223404B962046C764AEC016A5D5F56A7AC8404B46FD3B29A1BA00000000030000000100000030C0080A400FBA8827404D5147AE147AE1C0104B9991361DC9404CC6C985F06F69C00870A4E379B77C404CD8528AE74F2FBFFF593708AAC96D404CD7A786C22681C001C289118C197E404C6F5CB790FB65C008F3B7D84901D2404BFCA53FC00970C000AE1932D6ECE1404BF47AD080B674C0000B9FDBD2FA0D404BE7070FBEB9E5BFF1D700CD855971404B4FFF8A8F3A9BBFDB8D10F51AC9B0404B3B70AC3A860E3FC7AD7518B0D0EE404AA99A0F0A5EFF3FDE141A6937D1FE404A770A350D28073FFAE78D0CC35CE2404A5EA897635E743FF8F5B5FA22706D404A0CCCBC05D52C3FF0CF1A1986B9C34049E743F1C758193FF732A5A469D7344049A50BFA0945FA3FE19C560C7C0F4540496203BC4D22C9BFE93356DA0168B640496332D6ECE13FC003EB841248D7E0404940009F623077C007A672FBA01EEF404959335D249E45C00CF08893B7D84940491D3AC4F7EC35C0122B873797460240492BC15097C808C014FAE74F2F123C4048FAE147AE147BC0171B3461309C80404914705425F202C0113D6E04C0592140499AE15011904BC00B519D66ADB4034049B6877681669DC00B61BA7FC32EBE4049B6A2F48C2E77C013EFFDE7210BE94049CBF6B1A2A4DBC01511B60AE9680E4049FEE631F8A090C010E3AEEE957471404A2692D55A3A08C013147E49B1FAB9404A6B8548A9BCFDC01251EB4202D9CF404ABF5C4A83B1D1C008C02A77A2CECD404AB3C8323358F3C008BC947064ECEA404AB3C4B90214ADC0078F60E0EB67C3404AFE147AE147AEC00CEAE85B9E8C48404B4CEB80ECFA6AC00D0A400FBA8827404B4EB8BEF8CEB3C013606DD69D3027404B653E89A88ACEC0145481F53825E1404B87E28AA43351C012E05EE568A505404BC115A4ACF313C0143121EE675148404BE459A73B42CCC0165878B7A1C25D404BA7D3A1D323FFC016947A9E2BCF92404C2333B1077469C01899949E8815E4404C647B352A8438C01725B573EAB368404CE8D002E23290C0140A3D2D87F887404D50A444178705C010D892253111F1404D468216C61523C0080A400FBA8827404D5147AE147AE1",
		bin_to_hexstr(WKB9)).

% extended wkb
geom_3d_test() ->
	Pt = "{\"type\":\"Point\", \"coordinates\": [100.0, 0.0, 1.0]}",
	{ok, WKB1} = wkb_writer:geojson_to_wkb(Pt),
	?assertEqual("0080000001405900000000000000000000000000003FF0000000000000",
		 bin_to_hexstr(WKB1)).

% priv
bin_to_hexstr(Bin) ->
	lists:flatten([io_lib:format("~2.16.0B", [X]) ||
	X <- binary_to_list(Bin)]).